# Generated by Django 3.2.12 on 2023-12-21 06:17

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField()),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.RegexValidator(message='Email should be from University of Rwanda.', regex='@ur\\.ac\\.rw$')])),
                ('phone_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Phone number should start with +(country code).', regex='^\\+\\d{1,}')])),
                ('reference_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(99), django.core.validators.MaxValueValidator(999)])),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Others')], max_length=1)),
                ('car_plate_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Invalid car plate number.', regex='^(IT|RDF|RNP|GR|GP)\\d{2,}$')])),
                ('has_driving_license', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_plate_number', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('make', models.CharField(max_length=50)),
                ('speed', models.IntegerField()),
                ('weight', models.IntegerField()),
                ('color', models.CharField(max_length=50)),
                ('volume', models.IntegerField()),
                ('area', models.IntegerField()),
                ('mass', models.IntegerField()),
                ('additional_field', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalVehicle',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('car_plate_number', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('make', models.CharField(max_length=50)),
                ('speed', models.IntegerField()),
                ('weight', models.IntegerField()),
                ('color', models.CharField(max_length=50)),
                ('volume', models.IntegerField()),
                ('area', models.IntegerField()),
                ('mass', models.IntegerField()),
                ('additional_field', models.IntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical vehicle',
                'verbose_name_plural': 'historical vehicles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalParticipant',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date_of_birth', models.DateField()),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.RegexValidator(message='Email should be from University of Rwanda.', regex='@ur\\.ac\\.rw$')])),
                ('phone_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Phone number should start with +(country code).', regex='^\\+\\d{1,}')])),
                ('reference_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(99), django.core.validators.MaxValueValidator(999)])),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Others')], max_length=1)),
                ('car_plate_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Invalid car plate number.', regex='^(IT|RDF|RNP|GR|GP)\\d{2,}$')])),
                ('has_driving_license', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical participant',
                'verbose_name_plural': 'historical participants',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
